<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="testar__estado_8c" kind="file" language="C++">
    <compoundname>testar_estado.c</compoundname>
    <includes refid="testar__estado_8h" local="yes">testar_estado.h</includes>
    <includes local="no">assert.h</includes>
    <includes refid="obter__dados__estado_8h" local="yes">../dados/obter_dados_estado.h</includes>
    <incdepgraph>
      <node id="4">
        <label>assert.h</label>
      </node>
      <node id="1">
        <label>testes/testar_estado.c</label>
        <link refid="testar__estado_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>testar_estado.h</label>
        <link refid="testar__estado_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>../dados/obter_dados_estado.h</label>
        <link refid="obter__dados__estado_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>../dados/inicializar_estado.h</label>
        <link refid="inicializar__estado_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="testar__estado_8c_1a3408a6150ed8646bd869f684357a9bbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testa_estado</definition>
        <argsstring>(ESTADO e)</argsstring>
        <name>testa_estado</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref></type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Função que verifica se as variaves do estão no intervalo de valores esperado. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>O valor do estado.<linebreak/>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="testes/testar_estado.c" line="11" column="6" bodyfile="testes/testar_estado.c" bodystart="11" bodyend="33"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Função que faz testes sobre as variaveis do estado. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="5"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="testar__estado_8h" kindref="compound">testar_estado.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../dados/obter_dados_estado.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="testar__estado_8c_1a3408a6150ed8646bd869f684357a9bbb" kindref="member">testa_estado</ref><sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>e)</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;8;i++)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;8;j++)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="obter__dados__estado_8c_1a2a590ab3e3b5c8af145c60dd1eb83d4d" kindref="member">obter_casa</ref>(e,i,j)<sp/>==<sp/><ref refid="inicializar__estado_8h_1aba91601f16d4c485b2d9b8c429f27039abc711f491a56ec7af7a688be508c5113" kindref="member">VAZIO</ref><sp/>||<sp/><ref refid="obter__dados__estado_8c_1a2a590ab3e3b5c8af145c60dd1eb83d4d" kindref="member">obter_casa</ref>(e,i,j)<sp/>==<sp/><ref refid="inicializar__estado_8h_1aba91601f16d4c485b2d9b8c429f27039a007278eb3827d19891b47cdd3ac8846d" kindref="member">PRETA</ref><sp/>||<sp/><ref refid="obter__dados__estado_8c_1a2a590ab3e3b5c8af145c60dd1eb83d4d" kindref="member">obter_casa</ref>(e,i,j)<sp/>==<sp/><ref refid="inicializar__estado_8h_1aba91601f16d4c485b2d9b8c429f27039ad24485fddec75419fd4a0cc9edda0ca5" kindref="member">BRANCA</ref>);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;32;i++)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert<sp/>(<ref refid="obter__dados__estado_8c_1aa078bc44de22b3c2f2bd5367fc06ffff" kindref="member">obter_jogada_jogador_linha</ref>(e,i,1)&gt;=0<sp/>&amp;&amp;<sp/><ref refid="obter__dados__estado_8c_1aa078bc44de22b3c2f2bd5367fc06ffff" kindref="member">obter_jogada_jogador_linha</ref>(e,i,1)<sp/>&lt;=7);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert<sp/>(<ref refid="obter__dados__estado_8c_1aa078bc44de22b3c2f2bd5367fc06ffff" kindref="member">obter_jogada_jogador_linha</ref>(e,i,2)&gt;=0<sp/>&amp;&amp;<sp/><ref refid="obter__dados__estado_8c_1aa078bc44de22b3c2f2bd5367fc06ffff" kindref="member">obter_jogada_jogador_linha</ref>(e,i,2)<sp/>&lt;=7);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert<sp/>(<ref refid="obter__dados__estado_8c_1a8ec08cd9bf9691ce65f1c5c12d2dd965" kindref="member">obter_jogada_jogador_coluna</ref>(e,i,1)&gt;=0<sp/>&amp;&amp;<sp/><ref refid="obter__dados__estado_8c_1a8ec08cd9bf9691ce65f1c5c12d2dd965" kindref="member">obter_jogada_jogador_coluna</ref>(e,i,1)<sp/>&lt;=7);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert<sp/>(<ref refid="obter__dados__estado_8c_1a8ec08cd9bf9691ce65f1c5c12d2dd965" kindref="member">obter_jogada_jogador_coluna</ref>(e,i,2)&gt;=0<sp/>&amp;&amp;<sp/><ref refid="obter__dados__estado_8c_1a8ec08cd9bf9691ce65f1c5c12d2dd965" kindref="member">obter_jogada_jogador_coluna</ref>(e,i,2)<sp/>&lt;=7);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="obter__dados__estado_8c_1adca88fda125fd06faefdf80ebbad48c1" kindref="member">obter_jogador_atual</ref>(e)<sp/>&gt;=1<sp/>&amp;&amp;<sp/><ref refid="obter__dados__estado_8c_1adca88fda125fd06faefdf80ebbad48c1" kindref="member">obter_jogador_atual</ref>(e)<sp/>&lt;=2);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="obter__dados__estado_8c_1a89fec6fb258b5278165d5d00a0d352e0" kindref="member">obter_num_jogadas</ref>(e)&gt;=0<sp/>&amp;&amp;<sp/><ref refid="obter__dados__estado_8c_1a89fec6fb258b5278165d5d00a0d352e0" kindref="member">obter_num_jogadas</ref>(e)&lt;=32);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>assert<sp/>(<ref refid="obter__dados__estado_8c_1a6fb04090c3e6a56e81bcd19780d22169" kindref="member">obter_ultima_jogada_linha</ref>(e)&gt;=0<sp/>&amp;&amp;<sp/><ref refid="obter__dados__estado_8c_1a6fb04090c3e6a56e81bcd19780d22169" kindref="member">obter_ultima_jogada_linha</ref>(e)&lt;=7);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>assert<sp/>(<ref refid="obter__dados__estado_8c_1a904ac424419f4bb0ceeb934266039415" kindref="member">obter_ultima_jogada_coluna</ref>(e)&gt;=0<sp/>&amp;&amp;<sp/><ref refid="obter__dados__estado_8c_1a904ac424419f4bb0ceeb934266039415" kindref="member">obter_ultima_jogada_coluna</ref>(e)&lt;=7);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="testes/testar_estado.c"/>
  </compounddef>
</doxygen>
