<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="comando__jog_8c" kind="file" language="C++">
    <compoundname>comando_jog.c</compoundname>
    <includes refid="comando__jog_8h" local="yes">comando_jog.h</includes>
    <includes refid="obter__dados__estado_8h" local="yes">../dados/obter_dados_estado.h</includes>
    <includes refid="fazer__jogada_8h" local="yes">fazer_jogada.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">stdlib.h</includes>
    <incdepgraph>
      <node id="8">
        <label>stdlib.h</label>
      </node>
      <node id="6">
        <label>fazer_jogada.h</label>
        <link refid="fazer__jogada_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>logica/comando_jog.c</label>
        <link refid="comando__jog_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>comando_jog.h</label>
        <link refid="comando__jog_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>../dados/obter_dados_estado.h</label>
        <link refid="obter__dados__estado_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>../dados/inicializar_estado.h</label>
        <link refid="inicializar__estado_8h"/>
      </node>
      <node id="7">
        <label>time.h</label>
      </node>
      <node id="3">
        <label>../dados/lista.h</label>
        <link refid="lista_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="comando__jog_8c_1a041c2caba4e06c4294acb91b82cc5f6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
        <definition>COORDENADA jog_random</definition>
        <argsstring>(ESTADO e)</argsstring>
        <name>jog_random</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref></type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Função que chama as funçoes jogadas_possiveis, obter_num_random e obter_coordenada_lista para obter uma jogada aleatoria.<linebreak/>
. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>O valor do estado.<linebreak/>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A coordernada da jogada escolhida aleatoriamente. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica/comando_jog.c" line="10" column="12" bodyfile="logica/comando_jog.c" bodystart="10" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="comando__jog_8c_1a55ff32fdb2588a5a80f10d4902841c68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlista" kindref="compound">LISTA</ref></type>
        <definition>LISTA jogadas_possiveis</definition>
        <argsstring>(ESTADO e)</argsstring>
        <name>jogadas_possiveis</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref></type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Cria uma lista ligada com todas as jogadas possiveis.<linebreak/>
. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>O valor do estado.<linebreak/>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Uma lista com as jogadas possiveis. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica/comando_jog.c" line="25" column="7" bodyfile="logica/comando_jog.c" bodystart="25" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="comando__jog_8c_1a919d82cec6eda01075f9280e408d60e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
        <definition>COORDENADA obter_coordenada_lista</definition>
        <argsstring>(LISTA lista, int num_nodo)</argsstring>
        <name>obter_coordenada_lista</name>
        <param>
          <type><ref refid="structlista" kindref="compound">LISTA</ref></type>
          <declname>lista</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_nodo</declname>
        </param>
        <briefdescription>
<para>Acede à lista e obtem a coordendada guardada no nodo passado por parametro.<linebreak/>
. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lista</parametername>
</parameternamelist>
<parameterdescription>
<para>A lista com as jogadas possiveis.<linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_nodo</parametername>
</parameternamelist>
<parameterdescription>
<para>O nodo que tem a coordenada pertendida.<linebreak/>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A coordernada. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica/comando_jog.c" line="45" column="12" bodyfile="logica/comando_jog.c" bodystart="45" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="comando__jog_8c_1ad1ee8ea407289e3e192cda36f83b4484" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int obter_num_random</definition>
        <argsstring>(int min, int max)</argsstring>
        <name>obter_num_random</name>
        <param>
          <type>int</type>
          <declname>min</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Função que obtem um numero random dentro de um intervalo .<linebreak/>
. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>O limite inferior.<linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>O limite superior.<linebreak/>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>O número obtido. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica/comando_jog.c" line="57" column="5" bodyfile="logica/comando_jog.c" bodystart="57" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="comando__jog_8c_1a029c7551125c7c3ee231733809e90ce8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
        <definition>COORDENADA jog_minimax</definition>
        <argsstring>(ESTADO e, int profundidade)</argsstring>
        <name>jog_minimax</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref></type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>profundidade</declname>
        </param>
        <briefdescription>
<para>Função que obtem a melhor jogada com base no algoritmo minimax.<linebreak/>
. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>O valor do estado.<linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>profundidade</parametername>
</parameternamelist>
<parameterdescription>
<para>A profundidade ate onde o algoritmo minimax vai ser testado.<linebreak/>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A coordernada da jogada escolhida. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica/comando_jog.c" line="67" column="12" bodyfile="logica/comando_jog.c" bodystart="67" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="comando__jog_8c_1a18dcd168761725dea5501dd8064704cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void scores_possiveis</definition>
        <argsstring>(int scores[], int size, ESTADO e, LISTA lista, int profundidade)</argsstring>
        <name>scores_possiveis</name>
        <param>
          <type>int</type>
          <declname>scores</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref></type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structlista" kindref="compound">LISTA</ref></type>
          <declname>lista</declname>
        </param>
        <param>
          <type>int</type>
          <declname>profundidade</declname>
        </param>
        <briefdescription>
<para>Função que obtem o score de todas as jogadas possiveis com base no algoritmo minimax.<linebreak/>
. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scores</parametername>
</parameternamelist>
<parameterdescription>
<para>O array onde vao ser guardados os scores.<linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>O tamanho do array scores.<linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>O valor do estado.<linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lista</parametername>
</parameternamelist>
<parameterdescription>
<para>Uma lista ligada com as jogadas possiveis.<linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>profundidade</parametername>
</parameternamelist>
<parameterdescription>
<para>A profundidade ate onde o algoritmo minimax vai ser testado.<linebreak/>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica/comando_jog.c" line="87" column="6" bodyfile="logica/comando_jog.c" bodystart="87" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="comando__jog_8c_1a48ada26515bf455b2b00c4a5441f6018" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int obter_score</definition>
        <argsstring>(ESTADO e, COORDENADA coord, int profundidade)</argsstring>
        <name>obter_score</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref></type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>coord</declname>
        </param>
        <param>
          <type>int</type>
          <declname>profundidade</declname>
        </param>
        <briefdescription>
<para>Função que obtem o score de cada jogada com base no algoritmo minimax.<linebreak/>
. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>O valor do estado.<linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jogada</parametername>
</parameternamelist>
<parameterdescription>
<para>A jogada que vai ser testada.<linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>profundidade</parametername>
</parameternamelist>
<parameterdescription>
<para>A profundidade ate onde o algoritmo minimax vai ser testado.<linebreak/>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>O score obtido para essa jogada. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica/comando_jog.c" line="100" column="5" bodyfile="logica/comando_jog.c" bodystart="100" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="comando__jog_8c_1a25fdce1fbc1958c87da723af53a437b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int min</definition>
        <argsstring>(int array[], int size)</argsstring>
        <name>min</name>
        <param>
          <type>int</type>
          <declname>array</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Função que recebe um array de tamanho size e retorna o menor elemento.<linebreak/>
. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>O array.<linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>O tamanho do array.<linebreak/>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>O menor elemento. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica/comando_jog.c" line="126" column="5" bodyfile="logica/comando_jog.c" bodystart="126" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="comando__jog_8c_1a943abc380d4d0a7e79e322f0f8172d90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int max</definition>
        <argsstring>(int array[], int size)</argsstring>
        <name>max</name>
        <param>
          <type>int</type>
          <declname>array</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Função que recebe um array de tamanho size e retorna o maior elemento.<linebreak/>
. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>O array.<linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>O tamanho do array.<linebreak/>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>O maior elemento. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica/comando_jog.c" line="136" column="5" bodyfile="logica/comando_jog.c" bodystart="136" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="comando__jog_8c_1abd587d6a9bbebe5e49510b50ec8036d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int min_index</definition>
        <argsstring>(int array[], int size)</argsstring>
        <name>min_index</name>
        <param>
          <type>int</type>
          <declname>array</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Função que recebe um array de tamanho size e retorna o indice do menor elemento.<linebreak/>
. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>O array.<linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>O tamanho do array.<linebreak/>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>O indice do menor elemento. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica/comando_jog.c" line="146" column="5" bodyfile="logica/comando_jog.c" bodystart="146" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="comando__jog_8c_1a3a7d7f4c6a93ded84b758e9d677f06ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int max_index</definition>
        <argsstring>(int array[], int size)</argsstring>
        <name>max_index</name>
        <param>
          <type>int</type>
          <declname>array</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Função que recebe um array de tamanho size e retorna o indice do maiorr elemento.<linebreak/>
. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>O array.<linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>O tamanho do array.<linebreak/>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>O indice do maiorr elemento. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica/comando_jog.c" line="156" column="5" bodyfile="logica/comando_jog.c" bodystart="156" bodyend="164"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="comando__jog_8h" kindref="compound">comando_jog.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../dados/obter_dados_estado.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="fazer__jogada_8h" kindref="compound">fazer_jogada.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/><ref refid="comando__jog_8h_1a041c2caba4e06c4294acb91b82cc5f6e" kindref="member">jog_random</ref><sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>e)</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlista" kindref="compound">LISTA</ref><sp/><ref refid="structlista" kindref="compound">lista</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>coord;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/>random;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlista" kindref="compound">lista</ref><sp/>=<sp/><ref refid="comando__jog_8h_1a55ff32fdb2588a5a80f10d4902841c68" kindref="member">jogadas_possiveis</ref>(e);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/><ref refid="lista_8h_1a9dccd83713f51567593766bc7a7a18f7" kindref="member">comprimento_lista</ref>(<ref refid="structlista" kindref="compound">lista</ref>);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>random<sp/>=<sp/><sp/><ref refid="comando__jog_8h_1ad1ee8ea407289e3e192cda36f83b4484" kindref="member">obter_num_random</ref><sp/>(0,<sp/>len-1);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>coord<sp/>=<sp/><ref refid="comando__jog_8h_1a919d82cec6eda01075f9280e408d60e3" kindref="member">obter_coordenada_lista</ref><sp/>(<ref refid="structlista" kindref="compound">lista</ref>,<sp/>random);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lista_8h_1a9b60dfd0be6480500aab034ad8904eec" kindref="member">limpa_lista</ref>(&amp;<ref refid="structlista" kindref="compound">lista</ref>);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>coord;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><ref refid="structlista" kindref="compound">LISTA</ref><sp/><ref refid="comando__jog_8h_1a55ff32fdb2588a5a80f10d4902841c68" kindref="member">jogadas_possiveis</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>e)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l,c,ultima_linha,<sp/>ultima_coluna;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlista" kindref="compound">LISTA</ref><sp/><ref refid="structlista" kindref="compound">lista</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>*coord_ptr;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>ultima_coluna<sp/>=<sp/><ref refid="obter__dados__estado_8h_1a904ac424419f4bb0ceeb934266039415" kindref="member">obter_ultima_jogada_coluna</ref>(e);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>ultima_linha<sp/>=<sp/><ref refid="obter__dados__estado_8h_1a6fb04090c3e6a56e81bcd19780d22169" kindref="member">obter_ultima_jogada_linha</ref>(e);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlista" kindref="compound">lista</ref><sp/>=<sp/><ref refid="lista_8h_1ae3b99323b6f8f35d80bb69ff1a27985e" kindref="member">criar_lista</ref>();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(l=ultima_linha-1;<sp/>l<sp/>&lt;=ultima_linha<sp/>+1;<sp/>l++)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(c=ultima_coluna-1;<sp/>c<sp/>&lt;=ultima_coluna+1;<sp/>c++)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="obter__dados__estado_8h_1ad35fe177ba4902b4267925bdae8d8ea6" kindref="member">obter_casa</ref>(e,<sp/>l,c)<sp/>==<sp/>VAZIO)<sp/>&amp;&amp;<sp/>l&gt;=0<sp/>&amp;&amp;<sp/>l&lt;8<sp/>&amp;&amp;<sp/>c&gt;=0<sp/>&amp;&amp;<sp/>c&lt;8)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord_ptr<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref>));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord_ptr-&gt;<ref refid="structCOORDENADA_1adfbc8d4856ce807139fdf62e00aed29a" kindref="member">coluna</ref><sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord_ptr-&gt;<ref refid="structCOORDENADA_1aefe14bcc5a066ac3b21500cc3d28c06f" kindref="member">linha</ref><sp/>=<sp/>l;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlista" kindref="compound">lista</ref><sp/>=<sp/><ref refid="lista_8h_1a37ba5fc3cfddb6bc94d4b54b00bc696e" kindref="member">insere_cabeca</ref>(<ref refid="structlista" kindref="compound">lista</ref>,<sp/>coord_ptr);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structlista" kindref="compound">lista</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/><ref refid="comando__jog_8h_1a919d82cec6eda01075f9280e408d60e3" kindref="member">obter_coordenada_lista</ref><sp/>(<ref refid="structlista" kindref="compound">LISTA</ref><sp/><ref refid="structlista" kindref="compound">lista</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_nodo)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>*<sp/>coord_ptr<sp/>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>coord;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;num_nodo;<sp/>i++)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlista" kindref="compound">lista</ref><sp/>=<sp/><ref refid="lista_8h_1ad9380152361127432c55c1c6067e05ae" kindref="member">proximo</ref>(<ref refid="structlista" kindref="compound">lista</ref>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>coord_ptr<sp/>=<sp/><ref refid="lista_8h_1abfcb205f3eb670157be0d1221021714b" kindref="member">devolve_cabeca</ref>(<ref refid="structlista" kindref="compound">lista</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>coord.<ref refid="structCOORDENADA_1aefe14bcc5a066ac3b21500cc3d28c06f" kindref="member">linha</ref><sp/>=<sp/>coord_ptr-&gt;<ref refid="structCOORDENADA_1aefe14bcc5a066ac3b21500cc3d28c06f" kindref="member">linha</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>coord.<ref refid="structCOORDENADA_1adfbc8d4856ce807139fdf62e00aed29a" kindref="member">coluna</ref><sp/>=<sp/>coord_ptr-&gt;<ref refid="structCOORDENADA_1adfbc8d4856ce807139fdf62e00aed29a" kindref="member">coluna</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>coord;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="comando__jog_8h_1ad1ee8ea407289e3e192cda36f83b4484" kindref="member">obter_num_random</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="comando__jog_8h_1a25fdce1fbc1958c87da723af53a437b3" kindref="member">min</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="comando__jog_8h_1a943abc380d4d0a7e79e322f0f8172d90" kindref="member">max</ref>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>random;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ultime;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>time<sp/>(&amp;ultime);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>srand(ultime);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>random<sp/>=<sp/><ref refid="comando__jog_8h_1a25fdce1fbc1958c87da723af53a437b3" kindref="member">min</ref><sp/>+<sp/>(rand()<sp/>%<sp/>(<ref refid="comando__jog_8h_1a943abc380d4d0a7e79e322f0f8172d90" kindref="member">max</ref>-<ref refid="comando__jog_8h_1a25fdce1fbc1958c87da723af53a437b3" kindref="member">min</ref>+1));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>random;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/><ref refid="comando__jog_8h_1a029c7551125c7c3ee231733809e90ce8" kindref="member">jog_minimax</ref><sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>profundidade)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlista" kindref="compound">LISTA</ref><sp/><ref refid="structlista" kindref="compound">lista</ref><sp/>=<sp/><ref refid="comando__jog_8h_1a55ff32fdb2588a5a80f10d4902841c68" kindref="member">jogadas_possiveis</ref>(e);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="lista_8h_1a9dccd83713f51567593766bc7a7a18f7" kindref="member">comprimento_lista</ref>(<ref refid="structlista" kindref="compound">lista</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scores[len];</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;len;<sp/>i++)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scores[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="comando__jog_8h_1a18dcd168761725dea5501dd8064704cd" kindref="member">scores_possiveis</ref>(scores,<sp/>len<sp/>,<sp/>e,<sp/><ref refid="structlista" kindref="compound">lista</ref>,<sp/>profundidade);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="obter__dados__estado_8h_1adca88fda125fd06faefdf80ebbad48c1" kindref="member">obter_jogador_atual</ref>(e)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/><ref refid="comando__jog_8h_1a3a7d7f4c6a93ded84b758e9d677f06ab" kindref="member">max_index</ref>(scores,<sp/>len);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/><ref refid="comando__jog_8h_1abd587d6a9bbebe5e49510b50ec8036d8" kindref="member">min_index</ref>(scores,<sp/>len);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>coord<sp/>=<sp/><ref refid="comando__jog_8h_1a919d82cec6eda01075f9280e408d60e3" kindref="member">obter_coordenada_lista</ref>(<ref refid="structlista" kindref="compound">lista</ref>,<sp/>index);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lista_8h_1a9b60dfd0be6480500aab034ad8904eec" kindref="member">limpa_lista</ref>(&amp;<ref refid="structlista" kindref="compound">lista</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>coord;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="comando__jog_8h_1a18dcd168761725dea5501dd8064704cd" kindref="member">scores_possiveis</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scores<sp/>[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/><ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>e,<sp/><ref refid="structlista" kindref="compound">LISTA</ref><sp/><ref refid="structlista" kindref="compound">lista</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>profundidade)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>*coord_ptr<sp/>=<sp/>NULL,<sp/>coord<sp/>=<sp/>{0,0};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;size;<sp/>i++)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord_ptr<sp/>=<sp/><ref refid="lista_8h_1abfcb205f3eb670157be0d1221021714b" kindref="member">devolve_cabeca</ref>(<ref refid="structlista" kindref="compound">lista</ref>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord.linha<sp/>=<sp/>coord_ptr-&gt;<ref refid="structCOORDENADA_1aefe14bcc5a066ac3b21500cc3d28c06f" kindref="member">linha</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord.coluna<sp/>=<sp/>coord_ptr-&gt;<ref refid="structCOORDENADA_1adfbc8d4856ce807139fdf62e00aed29a" kindref="member">coluna</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scores[i]<sp/>=<sp/><ref refid="comando__jog_8h_1a48ada26515bf455b2b00c4a5441f6018" kindref="member">obter_score</ref>(e,<sp/>coord,<sp/>profundidade);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlista" kindref="compound">lista</ref><sp/>=<sp/><ref refid="lista_8h_1ad9380152361127432c55c1c6067e05ae" kindref="member">proximo</ref>(<ref refid="structlista" kindref="compound">lista</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="comando__jog_8h_1a48ada26515bf455b2b00c4a5441f6018" kindref="member">obter_score</ref><sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>e,<sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>coord,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>profundidade)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fazer__jogada_8h_1ac313d7e553b1e2b5f266acb9bfff8141" kindref="member">jogar</ref>(&amp;e,<sp/>coord);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(profundidade<sp/>&lt;=<sp/>0<sp/>&amp;&amp;<sp/><ref refid="fazer__jogada_8h_1ab0a0cac713e6a5566be4e2029a424dbe" kindref="member">verificar_vencedor</ref>(e)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fazer__jogada_8h_1ab0a0cac713e6a5566be4e2029a424dbe" kindref="member">verificar_vencedor</ref>(e)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1*(profundidade+1);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fazer__jogada_8h_1ab0a0cac713e6a5566be4e2029a424dbe" kindref="member">verificar_vencedor</ref>(e)<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-1)*(profundidade+1);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>profundidade--;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlista" kindref="compound">LISTA</ref><sp/><ref refid="structlista" kindref="compound">lista</ref><sp/>=<sp/><ref refid="comando__jog_8h_1a55ff32fdb2588a5a80f10d4902841c68" kindref="member">jogadas_possiveis</ref>(e);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="lista_8h_1a9dccd83713f51567593766bc7a7a18f7" kindref="member">comprimento_lista</ref>(<ref refid="structlista" kindref="compound">lista</ref>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scores[len];</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;len;<sp/>i++)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scores[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="comando__jog_8h_1a18dcd168761725dea5501dd8064704cd" kindref="member">scores_possiveis</ref>(scores,<sp/>len<sp/>,<sp/>e,<sp/><ref refid="structlista" kindref="compound">lista</ref>,<sp/>profundidade);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lista_8h_1a9b60dfd0be6480500aab034ad8904eec" kindref="member">limpa_lista</ref>(&amp;<ref refid="structlista" kindref="compound">lista</ref>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="obter__dados__estado_8h_1adca88fda125fd06faefdf80ebbad48c1" kindref="member">obter_jogador_atual</ref>(e)==1)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="comando__jog_8h_1a943abc380d4d0a7e79e322f0f8172d90" kindref="member">max</ref><sp/>(scores,<sp/>len);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="comando__jog_8h_1a25fdce1fbc1958c87da723af53a437b3" kindref="member">min</ref><sp/>(scores,<sp/>len);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="comando__jog_8h_1a25fdce1fbc1958c87da723af53a437b3" kindref="member">min</ref><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>array[],<sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/><sp/>)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>r;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>array[0];</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;size;<sp/>i++)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(array[i]&lt;<sp/>r)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r=<sp/>array[i];</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="comando__jog_8h_1a943abc380d4d0a7e79e322f0f8172d90" kindref="member">max</ref><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>array[],<sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/><sp/>)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>r;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>array[0];</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;size;<sp/>i++)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(array[i]&gt;<sp/>r)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r=<sp/>array[i];</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="comando__jog_8h_1abd587d6a9bbebe5e49510b50ec8036d8" kindref="member">min_index</ref><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>array[],<sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/><sp/>)</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>r;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;size;<sp/>i++)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(array[i]&lt;<sp/>array[r])</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="comando__jog_8h_1a3a7d7f4c6a93ded84b758e9d677f06ab" kindref="member">max_index</ref><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>array[],<sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/><sp/>)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>r;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;size;<sp/>i++)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(array[i]&gt;<sp/>array[r])</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r=<sp/>i;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="logica/comando_jog.c"/>
  </compounddef>
</doxygen>
